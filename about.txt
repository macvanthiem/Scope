symtab {
    Object *program
    Scope *currentScope {
        ObjectNode *objList {
            Object *object
            ObjectNode *next
        }
        Object *owner
        Scope *outer
    }
    ObjectNode *globalObjectList
}

Object {
    char name[MAX_IDENT_LEN];
    enum ObjectKind kind;
    union {
      ConstantAttributes* constAttrs;
      VariableAttributes* varAttrs;
      TypeAttributes* typeAttrs;
      FunctionAttributes* funcAttrs;
      ProcedureAttributes* procAttrs;
      ProgramAttributes* progAttrs;
      ParameterAttributes* paramAttrs;
    };
  };

initSymTab()
symtab {
    Object* program;
    Scope* currentScope;
    ObjectNode *globalObjectList = 
    1.READC {
        name = READC
        kind = OBJ_FUNCTION
        funcAttrs = {
            paramList = NULL
            returnType = TP_CHAR
            scope = {
                objList = NULL
                owner = READC
                outer = NULL
            }
        }
    }
    2.READI {
        name = READI
        kind = OBJ_FUNCTION
        funcAttrs = {
            paramList = NULL
            returnType = TP_INT
            scope = {
                objList = NULL
                owner = READC
                outer = NULL
            }
        }
    }
    3.WRITEI {
        name = WRITEI
        kind = OBJ_PROCEDURE
        procAttrs = {
            paramList = 
                1.PARAM_VALUE {
                    name = i
                    kind = OBJ_PARAMETER
                    paramAttrs = {
                        kind: OBJ_PARAMETER
                        type: TP_INT
                        function: WRITEI
                    }
                }
            scope = {
                objList = NULL
                owner = WRITEI
                outer = NULL
            }
        }
    }
    4.WRITEC {
        name = WRITEC
        kind = OBJ_PROCEDURE
        procAttrs = {
            paramList = 
                1.PARAM_VALUE {
                    name = ch
                    kind = OBJ_PARAMETER
                    paramAttrs = {
                        kind: OBJ_PARAMETER
                        type: TP_CHAR
                        function: WRITEC
                    }
                }
            scope = {
                objList = NULL
                owner = WRITEC
                outer = NULL
            }
        }
    }
    5.WRITELN { 
        name = WRITELN
        kind = OBJ_PROCEDURE
        procAttrs = {
            paramList = NULL
            scope = {
                objList = NULL
                owner = WRITELN
                outer = NULL
            }
        }
    }
}

ERR_UNDECLARED_IDENT
    checkDeclaredIdent (kiểm tra định danh vế phải của phép gán)
    checkDeclaredLValueIdent (kiểm tra định danh vế trái của phép gán)
ERR_UNDECLARED_CONSTANT
    checkDeclaredConstant (trường hợp gán const a = 10; b =a;)
ERR_UNDECLARED_TYPE
    checkDeclaredType (trường hợp type a = ... ; b = a; hoặc 63)
ERR_UNDECLARED_VARIABLE
    checkDeclaredVariable (kiểm tra biến đếm trong vòng for đã được khai báo chưa)
ERR_UNDECLARED_PROCEDURE
    checkDeclaredProcedure (kiểm tra thủ tục đã được khai báo chưa trong hàm CALL)
ERR_DUPLICATE_IDENT
    checkFreshIdent (xuất hiện chỗ khai báo)
